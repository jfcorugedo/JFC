// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.myhome.controller;

import com.myhome.controller.ApplicationConversionServiceFactoryBean;
import com.myhome.model.Attribute;
import com.myhome.model.Card;
import com.myhome.model.CardType;
import com.myhome.model.Role;
import com.myhome.model.User;
import com.myhome.service.AttributeService;
import com.myhome.service.CardService;
import com.myhome.service.CardTypeService;
import com.myhome.service.RoleService;
import com.myhome.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AttributeService ApplicationConversionServiceFactoryBean.attributeService;
    
    @Autowired
    CardService ApplicationConversionServiceFactoryBean.cardService;
    
    @Autowired
    CardTypeService ApplicationConversionServiceFactoryBean.cardTypeService;
    
    @Autowired
    RoleService ApplicationConversionServiceFactoryBean.roleService;
    
    @Autowired
    UserService ApplicationConversionServiceFactoryBean.userService;
    
    public Converter<Attribute, String> ApplicationConversionServiceFactoryBean.getAttributeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.myhome.model.Attribute, java.lang.String>() {
            public String convert(Attribute attribute) {
                return new StringBuilder().append(attribute.getName()).append(' ').append(attribute.getValue()).toString();
            }
        };
    }
    
    public Converter<Long, Attribute> ApplicationConversionServiceFactoryBean.getIdToAttributeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.myhome.model.Attribute>() {
            public com.myhome.model.Attribute convert(java.lang.Long id) {
                return attributeService.findAttribute(id);
            }
        };
    }
    
    public Converter<String, Attribute> ApplicationConversionServiceFactoryBean.getStringToAttributeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.myhome.model.Attribute>() {
            public com.myhome.model.Attribute convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Attribute.class);
            }
        };
    }
    
    public Converter<Card, String> ApplicationConversionServiceFactoryBean.getCardToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.myhome.model.Card, java.lang.String>() {
            public String convert(Card card) {
                return new StringBuilder().append(card.getScheduledDate()).append(' ').append(card.getPrice()).toString();
            }
        };
    }
    
    public Converter<Long, Card> ApplicationConversionServiceFactoryBean.getIdToCardConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.myhome.model.Card>() {
            public com.myhome.model.Card convert(java.lang.Long id) {
                return cardService.findCard(id);
            }
        };
    }
    
    public Converter<String, Card> ApplicationConversionServiceFactoryBean.getStringToCardConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.myhome.model.Card>() {
            public com.myhome.model.Card convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Card.class);
            }
        };
    }
    
    public Converter<CardType, String> ApplicationConversionServiceFactoryBean.getCardTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.myhome.model.CardType, java.lang.String>() {
            public String convert(CardType cardType) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<String, CardType> ApplicationConversionServiceFactoryBean.getIdToCardTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.myhome.model.CardType>() {
            public com.myhome.model.CardType convert(java.lang.String id) {
                return cardTypeService.findCardType(id);
            }
        };
    }
    
    public Converter<Role, String> ApplicationConversionServiceFactoryBean.getRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.myhome.model.Role, java.lang.String>() {
            public String convert(Role role) {
                return new StringBuilder().append(role.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Role> ApplicationConversionServiceFactoryBean.getIdToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.myhome.model.Role>() {
            public com.myhome.model.Role convert(java.lang.Long id) {
                return roleService.findRole(id);
            }
        };
    }
    
    public Converter<String, Role> ApplicationConversionServiceFactoryBean.getStringToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.myhome.model.Role>() {
            public com.myhome.model.Role convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Role.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.myhome.model.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getEmail()).append(' ').append(user.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.myhome.model.User>() {
            public com.myhome.model.User convert(java.lang.Long id) {
                return userService.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.myhome.model.User>() {
            public com.myhome.model.User convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), User.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAttributeToStringConverter());
        registry.addConverter(getIdToAttributeConverter());
        registry.addConverter(getStringToAttributeConverter());
        registry.addConverter(getCardToStringConverter());
        registry.addConverter(getIdToCardConverter());
        registry.addConverter(getStringToCardConverter());
        registry.addConverter(getCardTypeToStringConverter());
        registry.addConverter(getIdToCardTypeConverter());
        registry.addConverter(getRoleToStringConverter());
        registry.addConverter(getIdToRoleConverter());
        registry.addConverter(getStringToRoleConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
